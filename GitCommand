

一、远程git库克隆至本地（常用）
	将远程git库同步至本地，并在本地进行更改，然后再推至远程库

1、git仓库克隆至本地
 (1) git clone git@github.com:username/projectname.git 文件夹名称
	 git clone git@github.com:DankoZhang/GitCommand.git 文件夹名称
	 注：文件夹名称可以不写，不写默认将projectname作为本地文件夹名称

2、本地修改代码文件，并同步至git仓库
     git add test.scala				-- 添加更改
     git commit -m "注释"			-- 提交更改
     git push -u origin master			-- 将更改推送至远程git仓库


二、本地库关联至远程git库
	将本地文件夹转为本地git库，并与远程git库关联上

1、本地新建文件夹

2、将本地文件夹转为git可以管理的仓库
     git init

3、将新建代码文件添加至暂存区
	 git add test.py

4、将新建代码文件由暂存区提交至本地git仓库
	 git commit -m "注释"

5、建立远程git仓库(project)

6、将远程git库添加至本地，且命名为origin，实现远程git库和本地库的关联，之后便可对远程库及本地库之间进行pull、push操作
	 git remote add origin 远程库地址(git@github.com:username/projectname.git)

	 git remote add origin git@github.com:DankoZhang/GitCommand.git

	 git remote -v  可查看本地库关联了哪些远程库 

	 git remote remove origin  删除远程库origin 

7、远程git库与本地git库同步合并，拉取远端代码，更新本地库
	 git pull --rebase origin master

	 若远程库为新建，没有任何文件，则可以跳过这一步

8、将本地git库内容推送至远程git库
	 git push -u origin master(初次推送，需要加上参数-u)


三、删除远程库文件

第一步：git rm 文件名
第二步：git commit -m "delete ***"
第三步：git push -u origin master
